///////////////////////////////////////////////////
// RENDERING HELPERS
///////////////////////////////////////////////////

// Calculate signal strength from raw value, confidence, and configuration
calculateSignalStrength(SignalInstance signal, SignalDefinition definition, SignalConfiguration config) =>
    if na(signal.rawValue) or na(signal.confidence) or not config.enabled
        0.0
    else
        // Apply normalization based on configuration
        normalized = applyNormalization(signal.rawValue, definition, config)

        // Calculate strength as confidence × magnitude from neutral (0.5)
        strength = signal.confidence * math.abs(normalized - 0.5) * 2.0
        math.max(0.0, math.min(1.0, strength))

// Get color based on signal strength and configuration
getStrengthColor(float strength, SignalConfiguration config) =>
    if na(strength) or strength <= config.thresholdWeak
        color.gray
    else if strength >= config.thresholdStrong
        color.new(color.green, 20)
    else
        color.new(color.yellow, 30)

// Get emoji based on signal strength and latest thought sentiment
getDisplayEmoji(SignalInstance signal, float strength) =>
    latestThought = getLatestThought(signal)

    // Prefer thought sentiment if available, otherwise use strength-based emoji
    if latestThought.sentiment != "😐"
        latestThought.sentiment
    else
        switch
            strength >= 0.8 => "⚡"
            strength >= 0.6 => "📈"
            strength >= 0.4 => "📊"
            strength >= 0.2 => "📉"
            => "😐"

// Get directional emoji from raw value
getDirectionEmoji(float rawValue) =>
    switch
        rawValue > 0.1 => "🔼"
        rawValue < -0.1 => "🔽"
        => "➡️"
