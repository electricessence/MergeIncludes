// #require ../core/SignalInstance.partial.pine

// SignalInstance basic methods
method getName(SignalInstance this) => this.name
method getValue(SignalInstance this) => this.rawValue
method getConfidence(SignalInstance this) => this.confidence
method getThoughts(SignalInstance this) => this.thoughts

method setValue(SignalInstance this, float value) =>
    this.rawValue := value
    this

method setConfidence(SignalInstance this, float confidence) =>
    this.confidence := confidence
    this

method addThought(SignalInstance this, string sentiment, string message) =>
    thought = SignalThought.new(sentiment = sentiment, message = message)
    array.push(this.thoughts, thought)
    this

method addThoughtObj(SignalInstance this, SignalThought thought) =>
    array.push(this.thoughts, thought)
    this

method hasThoughts(SignalInstance this) => array.size(this.thoughts) > 0

method getThoughtCount(SignalInstance this) => array.size(this.thoughts)

method getThoughtAt(SignalInstance this, int index) =>
    array.get(this.thoughts, index)

method clearThoughts(SignalInstance this) =>
    array.clear(this.thoughts)
    this

method hasWarnings(SignalInstance this) =>
    for i = 0 to array.size(this.thoughts) - 1
        thought = array.get(this.thoughts, i)
        if thought.sentiment == "⚠️"
          true
    false

method getLatestThought(SignalInstance this) =>
    if array.size(this.thoughts) > 0
        array.get(this.thoughts, array.size(this.thoughts) - 1)
    else
        na

method isValid(SignalInstance this) =>
    not na(this.rawValue) and this.confidence > 0.0

method getStrengthCategory(SignalInstance this) =>
    if na(this.rawValue)
        "invalid"
    else if this.confidence < 0.3
        "weak"
    else if this.confidence < 0.7
        "moderate"
    else
        "strong"
